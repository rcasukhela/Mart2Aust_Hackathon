import unittest
import numpy as np

from reconstruction import modules


class testYardleyVariants(unittest.TestCase):

    # Test Yardley Variants with intermediate values
    def test_yardley_variants_intermediate1(self):
        # Define the Intermediate orientations
        yardleyVariants = [2.63, 10.005, 10.135]

        # Compute the test and expected YardleyVariants
        nw_yardley_test = modules.yardley_variants(yardleyVariants)
        nw_yardley_expected = np.array([
            [[0.722086167415935, -0.690637776729772, -0.0401376155286362],
             [0.675984398810399, 0.716722646011943, -0.171329335662581],
             [0.147094049476888, 0.0965821414517036, 0.984395870857397]],

            [[0.690637776729772, -0.722086167415935, 0.0401376155286362],
             [0.716722646011943, 0.675984398810399, -0.171329335662581],
             [0.0965821414517036, 0.147094049476888, 0.984395870857397]],

            [[-0.0401376155286362, 0.722086167415935, -0.690637776729772],
             [-0.171329335662581, 0.675984398810399, 0.716722646011943],
             [0.984395870857397, 0.147094049476888, 0.0965821414517036]],

            [[0.0401376155286362, 0.690637776729772, -0.722086167415935],
             [-0.171329335662581, 0.716722646011943, 0.675984398810399],
             [0.984395870857397, 0.0965821414517036, 0.147094049476888]],

            [[-0.690637776729772, -0.0401376155286362, 0.722086167415935],
             [0.716722646011943, -0.171329335662581, 0.675984398810399],
             [0.0965821414517036, 0.984395870857397, 0.147094049476888]],

            [[-0.722086167415935, 0.0401376155286362, 0.690637776729772],
             [0.675984398810399, -0.171329335662581, 0.716722646011943],
             [0.147094049476888, 0.984395870857397, 0.0965821414517036]],

            [[-0.0401376155286362, 0.690637776729772, 0.722086167415935],
             [-0.171329335662581, -0.716722646011943, 0.675984398810399],
             [0.984395870857397, -0.0965821414517036, 0.147094049476888]],

            [[0.0401376155286362, 0.722086167415935, 0.690637776729772],
             [-0.171329335662581, -0.675984398810399, 0.716722646011943],
             [0.984395870857397, -0.147094049476888, 0.0965821414517036]],

            [[-0.690637776729772, -0.722086167415935, -0.0401376155286362],
             [0.716722646011943, -0.675984398810399, -0.171329335662581],
             [0.0965821414517036, -0.147094049476888, 0.984395870857397]],

            [[-0.722086167415935, -0.690637776729772, 0.0401376155286362],
             [0.675984398810399, -0.716722646011943, -0.171329335662581],
             [0.147094049476888, -0.0965821414517036, 0.984395870857397]],

            [[0.722086167415935, 0.0401376155286362, -0.690637776729772],
             [0.675984398810399, 0.171329335662581, 0.716722646011943],
             [0.147094049476888, -0.984395870857397, 0.0965821414517036]],

            [[0.690637776729772, -0.0401376155286362, -0.722086167415935],
             [0.716722646011943, 0.171329335662581, 0.675984398810399],
             [0.0965821414517036, -0.984395870857397, 0.147094049476888]],

            [[0.690637776729772, 0.722086167415935, -0.0401376155286362],
             [-0.716722646011943, 0.675984398810399, -0.171329335662581],
             [-0.0965821414517036, 0.147094049476888, 0.984395870857397]],

            [[0.722086167415935, 0.690637776729772, 0.0401376155286362],
             [-0.675984398810399, 0.716722646011943, -0.171329335662581],
             [-0.147094049476888, 0.0965821414517036, 0.984395870857397]],

            [[-0.722086167415935, -0.0401376155286362, -0.690637776729772],
             [-0.675984398810399, -0.171329335662581, 0.716722646011943],
             [-0.147094049476888, 0.984395870857397, 0.0965821414517036]],

            [[-0.690637776729772, 0.0401376155286362, -0.722086167415935],
             [-0.716722646011943, -0.171329335662581, 0.675984398810399],
             [-0.0965821414517036, 0.984395870857397, 0.147094049476888]],

            [[0.0401376155286362, -0.690637776729772, 0.722086167415935],
             [0.171329335662581, 0.716722646011943, 0.675984398810399],
             [-0.984395870857397, 0.0965821414517036, 0.147094049476888]],

            [[-0.0401376155286362, -0.722086167415935, 0.690637776729772],
             [0.171329335662581, 0.675984398810399, 0.716722646011943],
             [-0.984395870857397, 0.147094049476888, 0.0965821414517036]],

            [[0.722086167415935, -0.0401376155286362, 0.690637776729772],
             [0.675984398810399, -0.171329335662581, -0.716722646011943],
             [0.147094049476888, 0.984395870857397, -0.0965821414517036]],

            [[0.690637776729772, 0.0401376155286362, 0.722086167415935],
             [0.716722646011943, -0.171329335662581, -0.675984398810399],
             [0.0965821414517036, 0.984395870857397, -0.147094049476888]],

            [[-0.0401376155286362, -0.690637776729772, -0.722086167415935],
             [-0.171329335662581, 0.716722646011943, -0.675984398810399],
             [0.984395870857397, 0.0965821414517036, -0.147094049476888]],

            [[0.0401376155286362, -0.722086167415935, -0.690637776729772],
             [-0.171329335662581, 0.675984398810399, -0.716722646011943],
             [0.984395870857397, 0.147094049476888, -0.0965821414517036]],

            [[-0.690637776729772, 0.722086167415935, 0.0401376155286362],
             [0.716722646011943, 0.675984398810399, 0.171329335662581],
             [0.0965821414517036, 0.147094049476888, -0.984395870857397]],

            [[-0.722086167415935, 0.690637776729772, -0.0401376155286362],
             [0.675984398810399, 0.716722646011943, 0.171329335662581],
             [0.147094049476888, 0.0965821414517036, -0.984395870857397]]
        ])

        # Assert the computed variants are within a range of the expected variants and that the shape is the same
        assert (np.allclose(nw_yardley_test, nw_yardley_expected, 0.01))
        assert (nw_yardley_test.shape == nw_yardley_expected.shape)

    # Test Yardley Variants with intermediate values
    def test_yardley_variants_intermediate2(self):
        # Define the Intermediate orientations
        yardleyVariants = [2.63, 4.87, 5.265]

        # Compute the test and expected YardleyVariants
        nw_yardley_test = modules.yardley_variants(yardleyVariants)
        nw_yardley_expected = np.array([

            [[0.720064793107394, -0.692659151038312, -0.0415931990845894],
             [0.688478115916397, 0.720629971176761, -0.0817944285754782],
             [0.0866289653142316, 0.0302612809488456, 0.995780938381490]],

            [[0.692659151038312, -0.720064793107394, 0.0415931990845894],
             [0.720629971176761, 0.688478115916397, -0.0817944285754782],
             [0.0302612809488456, 0.0866289653142316, 0.995780938381490]],

            [[-0.0415931990845894, 0.720064793107394, -0.692659151038312],
             [-0.0817944285754782, 0.688478115916397, 0.720629971176761],
             [0.995780938381490, 0.0866289653142316, 0.0302612809488456]],

            [[0.0415931990845894, 0.692659151038312, -0.720064793107394],
             [-0.0817944285754782, 0.720629971176761, 0.688478115916397],
             [0.995780938381490, 0.0302612809488456, 0.0866289653142316]],

            [[-0.692659151038312, -0.0415931990845894, 0.720064793107394],
             [0.720629971176761, -0.0817944285754782, 0.688478115916397],
             [0.0302612809488456, 0.995780938381490, 0.0866289653142316]],

            [[-0.720064793107394, 0.0415931990845894, 0.692659151038312],
             [0.688478115916397, -0.0817944285754782, 0.720629971176761],
             [0.0866289653142316, 0.9957809383814901, 0.0302612809488456]],

            [[-0.0415931990845894, 0.692659151038312, 0.720064793107394],
             [-0.0817944285754782, -0.720629971176761, 0.688478115916397],
             [0.995780938381490, -0.0302612809488456, 0.0866289653142316]],

            [[0.0415931990845894, 0.720064793107394, 0.692659151038312],
             [-0.0817944285754782, -0.688478115916397, 0.720629971176761],
             [0.995780938381490, -0.0866289653142316, 0.0302612809488456]],

            [[-0.692659151038312, -0.720064793107394, -0.0415931990845894],
             [0.720629971176761, -0.688478115916397, -0.0817944285754782],
             [0.0302612809488456, -0.0866289653142316, 0.995780938381490]],

            [[-0.720064793107394, -0.692659151038312, 0.0415931990845894],
             [0.688478115916397, -0.720629971176761, -0.0817944285754782],
             [0.0866289653142316, -0.0302612809488456, 0.995780938381490]],

            [[0.720064793107394, 0.0415931990845894, -0.692659151038312],
             [0.688478115916397, 0.0817944285754782, 0.720629971176761],
             [0.0866289653142316, -0.995780938381490, 0.0302612809488456]],

            [[0.692659151038312, -0.0415931990845894, -0.720064793107394],
             [0.720629971176761, 0.0817944285754782, 0.688478115916397],
             [0.0302612809488456, -0.995780938381490, 0.0866289653142316]],

            [[0.692659151038312, 0.720064793107394, -0.0415931990845894],
             [-0.720629971176761, 0.688478115916397, -0.0817944285754782],
             [-0.0302612809488456, 0.0866289653142316, 0.995780938381490]],

            [[0.720064793107394, 0.692659151038312, 0.0415931990845894],
             [-0.688478115916397, 0.720629971176761, -0.0817944285754782],
             [-0.0866289653142316, 0.0302612809488456, 0.995780938381490]],

            [[-0.720064793107394, -0.0415931990845894, -0.692659151038312],
             [-0.688478115916397, -0.0817944285754782, 0.720629971176761],
             [-0.0866289653142316, 0.995780938381490, 0.0302612809488456]],

            [[-0.692659151038312, 0.0415931990845894, -0.720064793107394],
             [-0.720629971176761, -0.0817944285754782, 0.688478115916397],
             [-0.0302612809488456, 0.995780938381490, 0.0866289653142316]],

            [[0.0415931990845894, -0.692659151038312, 0.720064793107394],
             [0.0817944285754782, 0.720629971176761, 0.688478115916397],
             [-0.995780938381490, 0.0302612809488456, 0.0866289653142316]],

            [[-0.0415931990845894, -0.720064793107394, 0.692659151038312],
             [0.0817944285754782, 0.688478115916397, 0.720629971176761],
             [-0.995780938381490, 0.0866289653142316, 0.0302612809488456]],

            [[0.720064793107394, -0.0415931990845894, 0.692659151038312],
             [0.688478115916397, -0.0817944285754782, -0.720629971176761],
             [0.0866289653142316, 0.995780938381490, -0.0302612809488456]],

            [[0.692659151038312, 0.0415931990845894, 0.720064793107394],
             [0.720629971176761, -0.0817944285754782, -0.688478115916397],
             [0.0302612809488456, 0.995780938381490, -0.0866289653142316]],

            [[-0.0415931990845894, -0.692659151038312, -0.720064793107394],
             [-0.0817944285754782, 0.720629971176761, -0.688478115916397],
             [0.995780938381490, 0.0302612809488456, -0.0866289653142316]],

            [[0.0415931990845894, -0.720064793107394, -0.692659151038312],
             [-0.0817944285754782, 0.688478115916397, -0.720629971176761],
             [0.995780938381490, 0.0866289653142316, -0.0302612809488456]],

            [[-0.692659151038312, 0.720064793107394, 0.0415931990845894],
             [0.720629971176761, 0.688478115916397, 0.0817944285754782],
             [0.0302612809488456, 0.0866289653142316, -0.995780938381490]],

            [[-0.720064793107394, 0.692659151038312, -0.0415931990845894],
             [0.688478115916397, 0.720629971176761, 0.0817944285754782],
             [0.0866289653142316, 0.0302612809488456, -0.995780938381490]]
            ])

        # Assert the computed variants are within a range of the expected variants and that the shape is the same
        assert (np.allclose(nw_yardley_test, nw_yardley_expected, 0.01))
        assert (nw_yardley_test.shape == nw_yardley_expected.shape)

    # Test Yardley Variants with the Nishiyama-Wasserman Orientations
    def test_yardley_variants_NW(self):
        # Define the Nishiyama-Wasserman orientations
        yardleyVariants = [0, 9.74, 9.74]

        # Compute the test and expected YardleyVariants
        nw_yardley_test = modules.yardley_variants(yardleyVariants)
        nw_yardley_expected = np.array([
            [[0.707106781186548, -0.707106781186548, 0],
             [0.696914261985647, 0.696914261985647, -0.169177489288622],
             [0.119626549900099, 0.119626549900099, 0.985585601111338]],

            [[0, 0.707106781186548, -0.707106781186548],
             [-0.169177489288622, 0.696914261985647, 0.696914261985647],
             [0.985585601111338, 0.119626549900099, 0.119626549900099]],

            [[-0.707106781186548, 0, 0.707106781186548],
             [0.696914261985647, -0.169177489288622, 0.696914261985647],
             [0.119626549900099, 0.985585601111338, 0.119626549900099]],

            [[0, 0.707106781186548, 0.707106781186548],
             [-0.169177489288622, -0.696914261985647, 0.696914261985647],
             [0.985585601111338, -0.119626549900099, 0.119626549900099]],

            [[-0.707106781186548, -0.707106781186548, 0],
             [0.696914261985647, -0.696914261985647, -0.169177489288622],
             [0.119626549900099, -0.119626549900099, 0.985585601111338]],

            [[0.707106781186548, 0, -0.707106781186548],
             [0.696914261985647, 0.169177489288622, 0.696914261985647],
             [0.119626549900099, -0.985585601111338, 0.119626549900099]],

            [[0.707106781186548, 0.707106781186548, 0],
             [-0.696914261985647, 0.696914261985647, -0.169177489288622],
             [-0.119626549900099, 0.119626549900099, 0.985585601111338]],

            [[-0.707106781186548, 0, -0.707106781186548],
             [-0.696914261985647, -0.169177489288622, 0.696914261985647],
             [-0.119626549900099, 0.985585601111338, 0.119626549900099]],

            [[0, -0.707106781186548, 0.707106781186548],
             [0.169177489288622, 0.696914261985647, 0.696914261985647],
             [-0.985585601111338, 0.119626549900099, 0.119626549900099]],

            [[0.707106781186548, 0, 0.707106781186548],
             [0.696914261985647, -0.169177489288622, -0.696914261985647],
             [0.119626549900099, 0.985585601111338, -0.119626549900099]],

            [[0, -0.707106781186548, -0.707106781186548],
             [-0.169177489288622, 0.696914261985647, -0.696914261985647],
             [0.985585601111338, 0.119626549900099, -0.119626549900099]],

            [[-0.707106781186548, 0.707106781186548, 0],
             [0.696914261985647, 0.696914261985647, 0.169177489288622],
             [0.119626549900099, 0.119626549900099, -0.985585601111338]]
        ])

        # Assert the computed variants are within a range of the expected variants and that the shape is the same
        assert (np.allclose(nw_yardley_test, nw_yardley_expected, 0.01))
        assert (nw_yardley_test.shape == nw_yardley_expected.shape)

    # Test Yardley Variants with the Kurdjumov-Sachs Orientations
    def test_yardley_variants_KS(self):
        # Define the Kurdjumov-Sachs orientations
        yardleyVariants = [5.26, 10.3, 10.53]

        # Compute the test and expected YardleyVariants
        ks_yardley_test = modules.yardley_variants(yardleyVariants)
        ks_yardley_expected = np.array([
            [[0.741468565958418, -0.666789661591932, -0.0749393947779382],
             [0.649949017141986, 0.741474547319595, -0.166678645282972],
             [0.166705251302211, 0.0748801901127209, 0.983159354487842]],

            [[0.666789661591932, -0.741468565958418, 0.0749393947779382],
             [0.741474547319595, 0.649949017141986, -0.166678645282972],
             [0.0748801901127209, 0.166705251302211, 0.983159354487842]],

            [[-0.0749393947779382, 0.741468565958418, -0.666789661591932],
             [-0.166678645282972, 0.649949017141986, 0.741474547319595],
             [0.983159354487842, 0.166705251302211, 0.0748801901127209]],

            [[0.0749393947779382, 0.666789661591932, -0.741468565958418],
             [-0.166678645282972, 0.741474547319595, 0.649949017141986],
             [0.983159354487842, 0.0748801901127209, 0.166705251302211]],

            [[-0.666789661591932, -0.0749393947779382, 0.741468565958418],
             [0.741474547319595, -0.166678645282972, 0.649949017141986],
             [0.0748801901127209, 0.983159354487842, 0.166705251302211]],

            [[-0.741468565958418, 0.0749393947779382, 0.666789661591932],
             [0.649949017141986, -0.166678645282972, 0.741474547319595],
             [0.166705251302211, 0.983159354487842, 0.0748801901127209]],

            [[-0.0749393947779382, 0.666789661591932, 0.741468565958418],
             [-0.166678645282972, -0.741474547319595, 0.649949017141986],
             [0.983159354487842, -0.0748801901127209, 0.166705251302211]],

            [[0.0749393947779382, 0.741468565958418, 0.666789661591932],
             [-0.166678645282972, -0.649949017141986, 0.741474547319595],
             [0.983159354487842, -0.166705251302211, 0.0748801901127209]],

            [[-0.666789661591932, -0.741468565958418, -0.0749393947779382],
             [0.741474547319595, -0.649949017141986, -0.166678645282972],
             [0.0748801901127209, -0.166705251302211, 0.983159354487842]],

            [[-0.741468565958418, -0.666789661591932, 0.0749393947779382],
             [0.649949017141986, -0.741474547319595, -0.166678645282972],
             [0.166705251302211, -0.0748801901127209, 0.983159354487842]],

            [[0.741468565958418, 0.0749393947779382, -0.666789661591932],
             [0.649949017141986, 0.166678645282972, 0.741474547319595],
             [0.166705251302211, -0.983159354487842, 0.0748801901127209]],

            [[0.666789661591932, -0.0749393947779382, -0.741468565958418],
             [0.741474547319595, 0.166678645282972, 0.649949017141986],
             [0.0748801901127209, -0.983159354487842, 0.166705251302211]],

            [[0.666789661591932, 0.741468565958418, -0.0749393947779382],
             [-0.741474547319595, 0.649949017141986, -0.166678645282972],
             [-0.0748801901127209, 0.166705251302211, 0.983159354487842]],

            [[0.741468565958418, 0.666789661591932, 0.0749393947779382],
             [-0.649949017141986, 0.741474547319595, -0.166678645282972],
             [-0.166705251302211, 0.0748801901127209, 0.983159354487842]],

            [[-0.741468565958418, -0.0749393947779382, -0.666789661591932],
             [-0.649949017141986, -0.166678645282972, 0.741474547319595],
             [-0.166705251302211, 0.983159354487842, 0.0748801901127209]],

            [[-0.666789661591932, 0.0749393947779382, -0.741468565958418],
             [-0.741474547319595, -0.166678645282972, 0.649949017141986],
             [-0.0748801901127209, 0.983159354487842, 0.166705251302211]],

            [[0.0749393947779382, -0.666789661591932, 0.741468565958418],
             [0.166678645282972, 0.741474547319595, 0.649949017141986],
             [-0.983159354487842, 0.0748801901127209, 0.166705251302211]],

            [[-0.0749393947779382, -0.741468565958418, 0.666789661591932],
             [0.166678645282972, 0.649949017141986, 0.741474547319595],
             [-0.983159354487842, 0.166705251302211, 0.0748801901127209]],

            [[0.741468565958418, -0.0749393947779382, 0.666789661591932],
             [0.649949017141986, -0.166678645282972, -0.741474547319595],
             [0.166705251302211, 0.983159354487842, -0.0748801901127209]],

            [[0.666789661591932, 0.0749393947779382, 0.741468565958418],
             [0.741474547319595, -0.166678645282972, -0.649949017141986],
             [0.0748801901127209, 0.983159354487842, -0.166705251302211]],

            [[-0.0749393947779382, -0.666789661591932, -0.741468565958418],
             [-0.166678645282972, 0.741474547319595, -0.649949017141986],
             [0.983159354487842, 0.0748801901127209, -0.166705251302211]],

            [[0.0749393947779382, -0.741468565958418, -0.666789661591932],
             [-0.166678645282972, 0.649949017141986, -0.741474547319595],
             [0.983159354487842, 0.166705251302211, -0.0748801901127209]],

            [[-0.666789661591932, 0.741468565958418, 0.0749393947779382],
             [0.741474547319595, 0.649949017141986, 0.166678645282972],
             [0.0748801901127209, 0.166705251302211, -0.983159354487842]],

            [[-0.741468565958418, 0.666789661591932, -0.0749393947779382],
             [0.649949017141986, 0.741474547319595, 0.166678645282972],
             [0.166705251302211, 0.0748801901127209, -0.983159354487842]]
        ])

        # Assert the computed variants are within a range of the expected variants and that the shape is the same
        assert (np.allclose(ks_yardley_test, ks_yardley_expected, 0.001))
        assert (ks_yardley_test.shape == ks_yardley_expected.shape)


if __name__ == '__main__':
    unittest.main()
